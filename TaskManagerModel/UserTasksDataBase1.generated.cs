//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace TaskManagerModel
{
	/// <summary>
	/// Database       : UserTasks
	/// Data Source    : UserTasks
	/// Server Version : 3.14.2
	/// </summary>
	public partial class UserTasksDB : LinqToDB.Data.DataConnection
	{
		public ITable<UserTask> UserTasks { get { return this.GetTable<UserTask>(); } }

		public UserTasksDB()
		{
			InitDataContext();
		}

		public UserTasksDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
		}

		partial void InitDataContext();
	}

	[Table("UserTasks")]
	public partial class UserTask
	{
		[Column("id"),          PrimaryKey,  Identity] public long   Id          { get; set; } // integer
		[Column("name"),        NotNull              ] public string Name        { get; set; } // text(max)
		[Column("description"),    Nullable          ] public string Description { get; set; } // text(max)
		[Column("priority"),    NotNull              ] public string Priority    { get; set; } // text(max)
		[Column("taskDate"),    NotNull              ] public string TaskDate    { get; set; } // text(max)
		[Column("notifyDate"),  NotNull              ] public string NotifyDate  { get; set; } // text(max)
		[Column("isNotified"),  NotNull              ] public long   IsNotified  { get; set; } // integer
	}

	public static partial class TableExtensions
	{
		public static UserTask Find(this ITable<UserTask> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}
